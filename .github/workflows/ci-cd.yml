name: FireWatch03 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven (skipping tests)
        run: mvn -B clean package -DskipTests

      - name: Run Tests
        run: mvn clean test -Dspring.profiles.active=test

      - name: Validate Environment Files
        run: |
          grep "SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle.fiap.com.br:1521:ORCL" .env.staging
          grep "SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle.fiap.com.br:1521:ORCL" .env.production

      - name: Build Docker Image
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            docker build -t firewatch03:staging .
          else
            docker build -t firewatch03:production .
          fi

      - name: Save Docker image
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            docker save firewatch03:staging > firewatch03.tar
          else
            docker save firewatch03:production > firewatch03.tar
          fi

      - name: Upload Docker image as artifact
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: firewatch03.tar

  deploy-staging:
    name: Deploy to Staging (Local)
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < firewatch03.tar

      - name: Simulate Staging Deployment
        run: |
          echo "=== STAGING DEPLOYMENT ==="
          echo "Copiando .env.staging para .env..."
          cp .env.staging .env
          echo "Iniciando contêineres para ambiente de STAGING..."
          echo "Aplicação estaria disponível em http://localhost:8080"
          echo "Prometheus estaria disponível em http://localhost:9090"
          echo "Grafana estaria disponível em http://localhost:3000"
          echo "Ambiente de STAGING implantado com sucesso!"

  deploy-production:
    name: Deploy to Production (Local)
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < firewatch03.tar

      - name: Simulate Production Deployment
        run: |
          echo "=== PRODUCTION DEPLOYMENT ==="
          echo "Copiando .env.production para .env..."
          cp .env.production .env
          echo "Iniciando contêineres para ambiente de PRODUÇÃO..."
          echo "Aplicação estaria disponível em http://localhost:8080"
          echo "Prometheus estaria disponível em http://localhost:9090"
          echo "Grafana estaria disponível em http://localhost:3000"
          echo "Ambiente de PRODUÇÃO implantado com sucesso!"